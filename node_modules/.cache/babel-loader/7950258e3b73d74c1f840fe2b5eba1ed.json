{"remainingRequest":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js!/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js??ref--14!/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/eslint-loader/index.js??ref--12-0!/Users/uthaya/Downloads/tplh.net-2019-master 3/src/webgl/OBJLoader.js","dependencies":[{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/src/webgl/OBJLoader.js","mtime":1586068672000},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/uthaya/Downloads/tplh.net-2019-master 3/src/webgl/OBJLoader.js"],"names":["THREE","require","object_pattern","material_library_pattern","material_use_pattern","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","fromDeclaration","previousMaterial","name","geometry","materials","smooth","startMaterial","previous","material","index","mtllib","Array","libraries","groupStart","groupEnd","groupCount","inherited","clone","cloned","currentMaterial","_finalize","lastMultiMaterial","end","mi","declared","finalize","parseVertexIndex","parseInt","len","parseNormalIndex","parseUVIndex","addVertex","src","dst","a","b","c","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","vLen","ia","ib","ic","ua","uvLen","na","nLen","addLineGeometry","vi","l","uvi","l2","manager","OBJLoader","constructor","load","scope","loader","onLoad","setPath","setMaterials","parse","text","lines","line","lineFirstChar","lineLength","result","trimLeft","i","data","parseFloat","lineData","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","j2","jl2","v2","v3","lineParts","lineVertices","lineUVs","li","llen","parts","value","container","k","kl","isLine","buffergeometry","createdMaterials","miLen","sourceMaterial","material2","materialLine","mi2","mi2Len","sourceMaterial2","mesh"],"mappings":"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","sourcesContent":["const THREE = require('three');\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.OBJLoader = (function() {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/;\n  // mtllib file_reference\n  var material_library_pattern = /^mtllib /;\n  // usemtl material_name\n  var material_use_pattern = /^usemtl /;\n\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n\n      materialLibraries: [],\n\n      startObject: function(name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial =\n          this.object && typeof this.object.currentMaterial === 'function'\n            ? this.object.currentMaterial()\n            : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: []\n          },\n          materials: [],\n          smooth: true,\n\n          startMaterial: function(name, libraries) {\n            var previous = this._finalize(false);\n\n            // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib:\n                Array.isArray(libraries) && libraries.length > 0\n                  ? libraries[libraries.length - 1]\n                  : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n\n              clone: function(index) {\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n\n            this.materials.push(material);\n\n            return material;\n          },\n\n          currentMaterial: function() {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n\n          _finalize: function(end) {\n            var lastMultiMaterial = this.currentMaterial();\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount =\n                lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            }\n\n            // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n            if (end && this.materials.length > 1) {\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            }\n\n            // Guarantee at least one empty material, this makes the creation later more straight forward.\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n\n            return lastMultiMaterial;\n          }\n        };\n\n        // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (\n          previousMaterial &&\n          previousMaterial.name &&\n          typeof previousMaterial.clone === 'function'\n        ) {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n\n      finalize: function() {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n\n      parseVertexIndex: function(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n\n      parseNormalIndex: function(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n\n      parseUVIndex: function(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n\n      addVertex: function(a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addVertexLine: function(a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n\n      addNormal: function(a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addColor: function(a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addUV: function(a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n\n      addUVLine: function(a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n      },\n\n      addFace: function(a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n\n        this.addVertex(ia, ib, ic);\n\n        if (ua !== undefined) {\n          var uvLen = this.uvs.length;\n\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n\n          this.addUV(ia, ib, ic);\n        }\n\n        if (na !== undefined) {\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n\n          this.addNormal(ia, ib, ic);\n        }\n\n        if (this.colors.length > 0) {\n          this.addColor(ia, ib, ic);\n        }\n      },\n\n      addLineGeometry: function(vertices, uvs) {\n        this.object.geometry.type = 'Line';\n\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (var uvi = 0, l2 = uvs.length; uvi < l2; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n\n    state.startObject('', false);\n\n    return state;\n  }\n\n  //\n\n  function OBJLoader(manager) {\n    this.manager =\n      manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = {\n    constructor: OBJLoader,\n\n    load: function(url, onLoad, onProgress, onError) {\n      var scope = this;\n\n      var loader = new THREE.FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(\n        url,\n        function(text) {\n          onLoad(scope.parse(text));\n        },\n        onProgress,\n        onError\n      );\n    },\n\n    setPath: function(value) {\n      this.path = value;\n    },\n\n    setMaterials: function(materials) {\n      this.materials = materials;\n\n      return this;\n    },\n\n    parse: function(text) {\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n        lineFirstChar = '';\n      var lineLength = 0;\n      var result = [];\n\n      // Faster to just trim left side of the line. Use if available.\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n\n        line = trimLeft ? line.trimLeft() : line.trim();\n\n        lineLength = line.length;\n\n        if (lineLength === 0) continue;\n\n        lineFirstChar = line.charAt(0);\n\n        // @todo invoke passed in handler if any\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3])\n              );\n              if (data.length === 8) {\n                state.colors.push(\n                  parseFloat(data[4]),\n                  parseFloat(data[5]),\n                  parseFloat(data[6])\n                );\n              }\n              break;\n            case 'vn':\n              state.normals.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3])\n              );\n              break;\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = [];\n\n          // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          }\n\n          // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n          var v1 = faceVertices[0];\n\n          for (var j2 = 1, jl2 = faceVertices.length - 1; j2 < jl2; j2++) {\n            var v2 = faceVertices[j2];\n            var v3 = faceVertices[j2 + 1];\n\n            state.addFace(\n              v1[0],\n              v2[0],\n              v3[0],\n              v1[1],\n              v2[1],\n              v3[1],\n              v1[2],\n              v2[2],\n              v3[2]\n            );\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line\n            .substring(1)\n            .trim()\n            .split(' ');\n          var lineVertices = [],\n            lineUVs = [];\n\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split('/');\n\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (' ' + result[0].substr(1).trim()).substr(1);\n\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n\n          state.object.startMaterial(\n            line.substring(7).trim(),\n            state.materialLibraries\n          );\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (lineFirstChar === 's') {\n          result = line.split(' ');\n\n          // smooth shading\n\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n\n          throw new Error('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n\n      var container = new THREE.Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n\n      for (var k = 0, kl = state.objects.length; k < kl; k++) {\n        var object = state.objects[k];\n        var geometry = object.geometry;\n        var materials = object.materials;\n        var isLine = geometry.type === 'Line';\n\n        // Skip o/g line declarations that did not follow with any faces\n        if (geometry.vertices.length === 0) continue;\n\n        var buffergeometry = new THREE.BufferGeometry();\n\n        buffergeometry.setAttribute(\n          'position',\n          new THREE.Float32BufferAttribute(geometry.vertices, 3)\n        );\n\n        if (geometry.normals.length > 0) {\n          buffergeometry.setAttribute(\n            'normal',\n            new THREE.Float32BufferAttribute(geometry.normals, 3)\n          );\n        } else {\n          buffergeometry.computeVertexNormals();\n        }\n\n        if (geometry.colors.length > 0) {\n          buffergeometry.setAttribute(\n            'color',\n            new THREE.Float32BufferAttribute(geometry.colors, 3)\n          );\n        }\n\n        if (geometry.uvs.length > 0) {\n          buffergeometry.setAttribute(\n            'uv',\n            new THREE.Float32BufferAttribute(geometry.uvs, 2)\n          );\n        }\n\n        // Create materials\n\n        var createdMaterials = [];\n\n        for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          var sourceMaterial = materials[mi];\n          var material2 = undefined;\n\n          if (this.materials !== null) {\n            material2 = this.materials.create(sourceMaterial.name);\n\n            // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n            if (\n              isLine &&\n              material2 &&\n              !(material instanceof THREE.LineBasicMaterial)\n            ) {\n              var materialLine = new THREE.LineBasicMaterial();\n              materialLine.copy(material);\n              material2 = materialLine;\n            }\n          }\n\n          if (!material2) {\n            material2 = !isLine\n              ? new THREE.MeshPhongMaterial()\n              : new THREE.LineBasicMaterial();\n            material2.name = sourceMaterial.name;\n          }\n\n          material2.flatShading = sourceMaterial.smooth ? false : true;\n\n          createdMaterials.push(material2);\n        }\n\n        // Create mesh\n\n        var mesh;\n\n        if (createdMaterials.length > 1) {\n          for (var mi2 = 0, mi2Len = materials.length; mi2 < mi2Len; mi2++) {\n            var sourceMaterial2 = materials[mi2];\n            buffergeometry.addGroup(\n              sourceMaterial2.groupStart,\n              sourceMaterial2.groupCount,\n              mi2\n            );\n          }\n\n          mesh = !isLine\n            ? new THREE.Mesh(buffergeometry, createdMaterials)\n            : new THREE.LineSegments(buffergeometry, createdMaterials);\n        } else {\n          mesh = !isLine\n            ? new THREE.Mesh(buffergeometry, createdMaterials[0])\n            : new THREE.LineSegments(buffergeometry, createdMaterials[0]);\n        }\n\n        mesh.name = object.name;\n\n        container.add(mesh);\n      }\n\n      return container;\n    }\n  };\n\n  return OBJLoader;\n})();\n"]}]}