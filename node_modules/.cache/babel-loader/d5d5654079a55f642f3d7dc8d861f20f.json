{"remainingRequest":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js!/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js??ref--14!/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/eslint-loader/index.js??ref--12-0!/Users/uthaya/Downloads/tplh.net-2019-master 3/src/webgl/index.js","dependencies":[{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/src/webgl/index.js","mtime":1586628539344},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uthaya/Downloads/tplh.net-2019-master 3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/uthaya/Downloads/tplh.net-2019-master 3/src/webgl/index.js"],"names":["scene","THREE","clock","autoStart","sceneAura","raycaster","renderTarget1","renderTarget2","renderTarget3","scenePE","cameraPE","petalHsv1","petalHsv2","petalHsv3","WebGLContent","canvas","store","webpExe","module","renderer","alpha","antialias","updateProgressAnchor","assetsObj","require","assetsImgs","PromiseOBJLoader","PromiseTextureLoader","geometrySkullHead","response","geometrySkullJaw","geometryPetal1","geometryPetal2","titleTex","noiseTex","noiseBurnTex","worksTextTex","whoiamTextTex","imgTexes","process","initDatGui","isHome","hasDelay","bool","index","direction","prevPosFromWorks","mouse","time","intersects","resolution"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\n\nimport store from '@/store';\nimport PromiseOBJLoader from '@/webgl/PromiseOBJLoader';\nimport PromiseTextureLoader from '@/webgl/PromiseTextureLoader';\nimport checkWebpFeature from '@/utils/checkWebpFeature';\n\nimport PIXEL_RATIO from '@/const/PIXEL_RATIO';\n\n// ==========\n// Define common variables\n//\nlet renderer;\nconst scene = new THREE.Scene();\nconst clock = new THREE.Clock({\n  autoStart: false\n});\nconst sceneAura = new THREE.Scene();\nconst raycaster = new THREE.Raycaster();\n\n// For the post effect.\nconst renderTarget1 = new THREE.WebGLRenderTarget();\nconst renderTarget2 = new THREE.WebGLRenderTarget();\nconst renderTarget3 = new THREE.WebGLRenderTarget();\nconst scenePE = new THREE.Scene();\nconst cameraPE = new THREE.OrthographicCamera(-1, 1, 1, -1, 1, 2);\n\nconst petalHsv1 = new THREE.Vector3(0.09, 0.7, 0.35);\nconst petalHsv2 = new THREE.Vector3(0.09, 0.46, 0.1);\nconst petalHsv3 = new THREE.Vector3(0.09, 0.72, 0.18);\n\n// ==========\n// Define WebGLContent Class.\n//\nexport default class WebGLContent {\n  constructor() {\n    this.camera;\n    this.skullAuraCamera;\n    this.skull;\n    this.title;\n    this.petalRotateGroup;\n    this.petalFallGroup;\n    this.image;\n    this.worksText;\n    this.whoiamText;\n    this.bg;\n    this.intersector;\n    this.postEffectBright;\n    this.postEffectBlurX;\n    this.postEffectBlurY;\n    this.postEffectBloom;\n  }\n  async start(canvas, store) {\n    // Check whether the webp format is enabled.\n    let webpExe = '';\n    await checkWebpFeature('lossy')\n      .then(() => {\n        webpExe = 'webp';\n      })\n      .catch(() => {\n        webpExe = 'jpg';\n      });\n\n    // import modules\n    await Promise.all([\n      import('@/webgl/Camera').then(module => {\n        this.camera = new module.default();\n      }),\n      import('@/webgl/SkullAuraCamera').then(module => {\n        this.skullAuraCamera = new module.default();\n      }),\n      import('@/webgl/Skull').then(module => {\n        this.skull = new module.default();\n      }),\n      import('@/webgl/Title').then(module => {\n        this.title = new module.default();\n      }),\n      import('@/webgl/PetalFallGroup').then(module => {\n        this.petalFallGroup = new module.default();\n      }),\n      import('@/webgl/PetalRotateGroup').then(module => {\n        this.petalRotateGroup = new module.default();\n      }),\n      import('@/webgl/Image').then(module => {\n        this.image = new module.default();\n      }),\n      import('@/webgl/WorksText').then(module => {\n        this.worksText = new module.default();\n      }),\n      import('@/webgl/WhoIamText').then(module => {\n        this.whoiamText = new module.default();\n      }),\n      import('@/webgl/Background').then(module => {\n        this.bg = new module.default();\n      }),\n      import('@/webgl/Intersector').then(module => {\n        this.intersector = new module.default();\n      }),\n      import('@/webgl/PostEffectBright').then(module => {\n        this.postEffectBright = new module.default();\n      }),\n      import('@/webgl/PostEffectBlur').then(module => {\n        this.postEffectBlurX = new module.default();\n        this.postEffectBlurY = new module.default();\n      }),\n      import('@/webgl/PostEffectBloom').then(module => {\n        this.postEffectBloom = new module.default();\n      })\n    ]);\n\n    // Initialize the WebGL renderer.\n    renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: false,\n      canvas: canvas\n    });\n    renderer.setPixelRatio(PIXEL_RATIO);\n    renderer.setClearColor(0x1b191c, 0.0);\n\n    // For the Post Effect.\n    this.postEffectBright.start(renderTarget1.texture);\n    this.postEffectBlurX.start(renderTarget2.texture, 1, 0);\n    this.postEffectBlurY.start(renderTarget3.texture, 0, 1);\n    this.postEffectBloom.start(renderTarget1.texture, renderTarget2.texture);\n\n    // Loading all assets for WebGL.\n    const updateProgressAnchor = result => {\n      store.commit('updatePreloadAnchor');\n      return result;\n    };\n    const assetsObj = [\n      require('@/assets/obj/SkullHead.obj'),\n      require('@/assets/obj/CherryBlossom.obj')\n    ];\n    const assetsImgs = [\n      require(`@/assets/img/webgl/title.${webpExe}`),\n      require(`@/assets/img/webgl/noise.${webpExe}`),\n      require(`@/assets/img/webgl/noise_burn.${webpExe}`),\n      require(`@/assets/img/webgl/works_text.${webpExe}`),\n      require(`@/assets/img/webgl/whoiam_text.${webpExe}`),\n      require('@/assets/img/webgl/thumb_blank.png'),\n      require(`@/assets/img/webgl/thumb_sketch_threejs.${webpExe}`),\n      require(`@/assets/img/webgl/thumb_warpdrive.${webpExe}`),\n      require(`@/assets/img/webgl/thumb_hassyadai.${webpExe}`),\n      require(`@/assets/img/webgl/thumb_imago.${webpExe}`),\n      require(`@/assets/img/webgl/thumb_best_film_2018.${webpExe}`)\n    ];\n    store.commit('setPreloadMax', assetsObj.length + assetsImgs.length);\n\n    await Promise.all([\n      ...assetsObj.map(o => {\n        return PromiseOBJLoader(o).then(updateProgressAnchor);\n      }),\n      ...assetsImgs.map(o => {\n        return PromiseTextureLoader(o).then(updateProgressAnchor);\n      })\n    ]).then(response => {\n      // Initialize all instance on WebGL scene.\n      const geometrySkullHead = response[0].children[1].geometry;\n      const geometrySkullJaw = response[0].children[0].geometry;\n      const geometryPetal1 = response[1].children[0].geometry;\n      const geometryPetal2 = response[1].children[1].geometry;\n      const titleTex = response[2];\n      const noiseTex = response[3];\n      const noiseBurnTex = response[4];\n      const worksTextTex = response[5];\n      const whoiamTextTex = response[6];\n      const imgTexes = response.slice(7);\n\n      noiseTex.wrapS = THREE.RepeatWrapping;\n      noiseTex.wrapT = THREE.RepeatWrapping;\n      noiseBurnTex.wrapS = THREE.RepeatWrapping;\n      noiseBurnTex.wrapT = THREE.RepeatWrapping;\n      worksTextTex.wrapS = THREE.RepeatWrapping;\n      worksTextTex.wrapT = THREE.RepeatWrapping;\n\n      // Add the webgl objects to the scene.\n      scene.add(this.skull);\n      scene.add(this.title);\n      scene.add(this.petalFallGroup);\n      scene.add(this.petalRotateGroup);\n      scene.add(this.image);\n      scene.add(this.worksText);\n      scene.add(this.whoiamText);\n      scene.add(this.bg);\n      scene.add(this.intersector);\n\n      // Start all updating.\n      this.camera.start();\n      this.skullAuraCamera.start();\n      this.skull.start(geometrySkullHead, geometrySkullJaw, noiseTex);\n      this.title.start(titleTex, noiseTex);\n      this.petalFallGroup.start(\n        geometryPetal1,\n        geometryPetal2,\n        noiseTex,\n        petalHsv1,\n        petalHsv2,\n        petalHsv3\n      );\n      this.petalRotateGroup.start(\n        geometryPetal1,\n        geometryPetal2,\n        noiseTex,\n        petalHsv1,\n        petalHsv2,\n        petalHsv3\n      );\n      this.image.start(noiseBurnTex, imgTexes);\n      this.worksText.start(worksTextTex);\n      this.whoiamText.start(whoiamTextTex);\n      this.bg.start(noiseTex);\n    });\n\n    // show the dat.gui.\n    if (process.env.NODE_ENV === 'development') {\n      const initDatGui = await import('@/utils/initDatGui');\n\n      initDatGui.default(\n        this.skull,\n        this.petalRotateGroup,\n        petalHsv1,\n        petalHsv2,\n        petalHsv3\n      );\n    }\n  }\n  play() {\n    clock.start();\n  }\n  pause() {\n    clock.stop();\n  }\n  changeBackground(isHome, hasDelay) {\n    this.bg.change(isHome, hasDelay);\n  }\n  showHomeObjs(bool) {\n    if (bool === true) {\n      this.skull.show();\n      this.title.show();\n      this.petalRotateGroup.show();\n      this.postEffectBloom.shake();\n    } else {\n      this.skull.hide();\n      this.title.hide();\n      this.petalRotateGroup.hide();\n      this.postEffectBloom.fadeOut();\n    }\n  }\n  showWorksObjs(index, direction, prevPosFromWorks) {\n    this.image.change(index, direction + prevPosFromWorks);\n    this.worksText.change(index, direction, prevPosFromWorks);\n  }\n  showWhoIAmObjs(bool) {\n    if (bool === true) {\n      this.petalFallGroup.show();\n      this.whoiamText.show();\n    } else {\n      this.petalFallGroup.hide();\n      this.whoiamText.hide();\n    }\n  }\n  update() {\n    const { mouse } = store.state;\n\n    // When the clock is stopped, it stops the all rendering too.\n    const time = clock.running === true ? clock.getDelta() : 0;\n\n    // Calculate msec for this frame.\n\n    // Update Camera.\n    this.camera.update(time);\n    this.skullAuraCamera.update(this.camera);\n\n    // Raycast\n    raycaster.setFromCamera(mouse, this.camera);\n    const intersects = raycaster.intersectObjects([this.intersector]);\n    if (intersects.length > 0) {\n      this.skull.lookMouse(intersects[0].point);\n    }\n\n    // Update each objects.\n    this.skull.update(\n      time,\n      renderer,\n      this.camera,\n      sceneAura,\n      this.skullAuraCamera\n    );\n    this.petalFallGroup.update(time);\n    this.petalRotateGroup.update(time);\n    this.title.update(time);\n    this.image.update(time);\n    this.worksText.update(time);\n    this.whoiamText.update(time);\n    this.bg.update(time);\n    this.postEffectBloom.update(time);\n\n    // Render the main scene to frame buffer.\n    renderer.setRenderTarget(renderTarget1);\n    renderer.render(scene, this.camera);\n\n    // // Render the post effect.\n    scenePE.add(this.postEffectBright);\n    renderer.setRenderTarget(renderTarget2);\n    renderer.render(scenePE, cameraPE);\n    scenePE.remove(this.postEffectBright);\n    scenePE.add(this.postEffectBlurX);\n    renderer.setRenderTarget(renderTarget3);\n    renderer.render(scenePE, cameraPE);\n    scenePE.remove(this.postEffectBlurX);\n    scenePE.add(this.postEffectBlurY);\n    renderer.setRenderTarget(renderTarget2);\n    renderer.render(scenePE, cameraPE);\n    scenePE.remove(this.postEffectBlurY);\n    scenePE.add(this.postEffectBloom);\n    renderer.setRenderTarget(null);\n    renderer.render(scenePE, cameraPE);\n    scenePE.remove(this.postEffectBloom);\n  }\n  resize() {\n    const { resolution } = store.state;\n\n    this.camera.resize();\n    this.skull.resize();\n    this.title.resize();\n    this.image.resize();\n    this.bg.resize(this.camera);\n    this.intersector.resize(this.camera);\n    renderer.setSize(resolution.x, resolution.y);\n\n    // For the Post Effect.\n    renderTarget1.setSize(\n      resolution.x * PIXEL_RATIO,\n      resolution.y * PIXEL_RATIO\n    );\n    renderTarget2.setSize(\n      resolution.x * PIXEL_RATIO,\n      resolution.y * PIXEL_RATIO\n    );\n    renderTarget3.setSize(\n      resolution.x * PIXEL_RATIO,\n      resolution.y * PIXEL_RATIO\n    );\n    this.postEffectBlurY.resize();\n    this.postEffectBlurX.resize();\n  }\n}\n"]}]}